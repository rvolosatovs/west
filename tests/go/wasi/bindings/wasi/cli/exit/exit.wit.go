// Code generated by wit-bindgen-go. DO NOT EDIT.

// Package exit represents the imported interface "wasi:cli/exit@0.2.1".
package exit

import (
	"github.com/bytecodealliance/wasm-tools-go/cm"
)

// Exit represents the imported function "exit".
//
// Exit the current instance and any linked instances.
//
//	exit: func(status: result)
//
//go:nosplit
func Exit(status cm.BoolResult) {
	status0 := cm.BoolToU32(status)
	wasmimport_Exit((uint32)(status0))
	return
}

//go:wasmimport wasi:cli/exit@0.2.1 exit
//go:noescape
func wasmimport_Exit(status0 uint32)

// ExitWithCode represents the imported function "exit-with-code".
//
// Exit the current instance and any linked instances, reporting the
// specified status code to the host.
//
// The meaning of the code depends on the context, with 0 usually meaning
// "success", and other values indicating various types of failure.
//
// This function does not return; the effect is analogous to a trap, but
// without the connotation that something bad has happened.
//
//	exit-with-code: func(status-code: u8)
//
//go:nosplit
func ExitWithCode(statusCode uint8) {
	statusCode0 := (uint32)(statusCode)
	wasmimport_ExitWithCode((uint32)(statusCode0))
	return
}

//go:wasmimport wasi:cli/exit@0.2.1 exit-with-code
//go:noescape
func wasmimport_ExitWithCode(statusCode0 uint32)
